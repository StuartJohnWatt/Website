sep="") %>%
lapply(htmltools::HTML)
colMap_1 <- colorNumeric("GnBu", domain = NULL)
colMap_2 <- colorNumeric("YlOrRd", domain = NULL)
m <- leaflet(world_spdf) %>%
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_1(tot_cases_per_million %>% log()),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Cases") %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_2(world_spdf$tot_deaths_per_million %>% log() %>% map_dbl(~ifelse(is.finite(.x),.x,NA))),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Deaths") %>%
# Layers control
addLayersControl(
baseGroups = c("Cases", "Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
frameWidget(m)
# m <- leaflet(world_spdf) %>%
#   addTiles() %>%
#   setView(lat=10, lng=0, zoom=2) %>%
#   addPolygons(fillOpacity = 0.8,
#               color = ~colorQuantile("YlOrRd", tot_cases_per_million, n = 9)(tot_cases_per_million),
#               stroke = FALSE,
#               label = text_popup,
#               labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
#                                           textsize = "13px",
#                                           direction = "auto"))
#
# frameWidget(m)
install.packages(leaflet)
install.packages("leaflet")
blogdown::stop_server()
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data
world_spdf@data %>% print(n = Inf)
world_spdf@data %>% print()
if(!file.exists("data/world_shape_file.zip")){
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="data/world_shape_file.zip")
dir.create("data/world_shape_file/")
unzip("data/world_shape_file.zip", exdir = "data/world_shape_file")
}
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data <- covid %>%
filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
right_join(world_spdf@data, by = c("geoId" = "ISO2"))
#right_join(world_spdf@data, by = c("iso3c" = "ISO3"))
text_popup <- paste("Country: ", world_spdf@data$NAME, "<br/>",
"Conf. cases: ", world_spdf@data$tot_cases, "<br/>",
"Conf. deaths: ", world_spdf@data$tot_deaths, "<br/>",
"Conf. cases p.million: ", round(world_spdf@data$tot_cases_per_million, 2), "<br/>",
"Conf. deaths p.million: ", round(world_spdf@data$tot_deaths_per_million, 2), "<br/>",
sep="") %>%
lapply(htmltools::HTML)
colMap_1 <- colorNumeric("GnBu", domain = NULL)
colMap_2 <- colorNumeric("YlOrRd", domain = NULL)
m <- leaflet(world_spdf) %>%
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_1(tot_cases_per_million %>% log()),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Cases") %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_2(world_spdf$tot_deaths_per_million %>% log() %>% map_dbl(~ifelse(is.finite(.x),.x,NA))),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Deaths") %>%
# Layers control
addLayersControl(
baseGroups = c("Cases", "Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
frameWidget(m)
# m <- leaflet(world_spdf) %>%
#   addTiles() %>%
#   setView(lat=10, lng=0, zoom=2) %>%
#   addPolygons(fillOpacity = 0.8,
#               color = ~colorQuantile("YlOrRd", tot_cases_per_million, n = 9)(tot_cases_per_million),
#               stroke = FALSE,
#               label = text_popup,
#               labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
#                                           textsize = "13px",
#                                           direction = "auto"))
#
# frameWidget(m)
world_spdf@data %>% View()
if(!file.exists("data/world_shape_file.zip")){
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="data/world_shape_file.zip")
dir.create("data/world_shape_file/")
unzip("data/world_shape_file.zip", exdir = "data/world_shape_file")
}
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data <- covid %>%
filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
inner_join(world_spdf@data, by = c("geoId" = "ISO2"))
#right_join(world_spdf@data, by = c("iso3c" = "ISO3"))
text_popup <- paste("Country: ", world_spdf@data$NAME, "<br/>",
"Conf. cases: ", world_spdf@data$tot_cases, "<br/>",
"Conf. deaths: ", world_spdf@data$tot_deaths, "<br/>",
"Conf. cases p.million: ", round(world_spdf@data$tot_cases_per_million, 2), "<br/>",
"Conf. deaths p.million: ", round(world_spdf@data$tot_deaths_per_million, 2), "<br/>",
sep="") %>%
lapply(htmltools::HTML)
colMap_1 <- colorNumeric("GnBu", domain = NULL)
colMap_2 <- colorNumeric("YlOrRd", domain = NULL)
m <- leaflet(world_spdf) %>%
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_1(tot_cases_per_million %>% log()),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Cases") %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_2(world_spdf$tot_deaths_per_million %>% log() %>% map_dbl(~ifelse(is.finite(.x),.x,NA))),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Deaths") %>%
# Layers control
addLayersControl(
baseGroups = c("Cases", "Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
frameWidget(m)
# m <- leaflet(world_spdf) %>%
#   addTiles() %>%
#   setView(lat=10, lng=0, zoom=2) %>%
#   addPolygons(fillOpacity = 0.8,
#               color = ~colorQuantile("YlOrRd", tot_cases_per_million, n = 9)(tot_cases_per_million),
#               stroke = FALSE,
#               label = text_popup,
#               labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
#                                           textsize = "13px",
#                                           direction = "auto"))
#
# frameWidget(m)
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data <- covid %>%
filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
inner_join(select(world_spdf@data, -LON, -LAT), by = c("geoId" = "ISO2"))
if(!file.exists("data/world_shape_file.zip")){
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="data/world_shape_file.zip")
dir.create("data/world_shape_file/")
unzip("data/world_shape_file.zip", exdir = "data/world_shape_file")
}
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data <- covid %>%
filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
inner_join(select(world_spdf@data, -LON, -LAT), by = c("geoId" = "ISO2"))
#right_join(world_spdf@data, by = c("iso3c" = "ISO3"))
text_popup <- paste("Country: ", world_spdf@data$NAME, "<br/>",
"Conf. cases: ", world_spdf@data$tot_cases, "<br/>",
"Conf. deaths: ", world_spdf@data$tot_deaths, "<br/>",
"Conf. cases p.million: ", round(world_spdf@data$tot_cases_per_million, 2), "<br/>",
"Conf. deaths p.million: ", round(world_spdf@data$tot_deaths_per_million, 2), "<br/>",
sep="") %>%
lapply(htmltools::HTML)
colMap_1 <- colorNumeric("GnBu", domain = NULL)
colMap_2 <- colorNumeric("YlOrRd", domain = NULL)
m <- leaflet(world_spdf) %>%
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_1(tot_cases_per_million %>% log()),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Cases") %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_2(world_spdf$tot_deaths_per_million %>% log() %>% map_dbl(~ifelse(is.finite(.x),.x,NA))),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Deaths") %>%
# Layers control
addLayersControl(
baseGroups = c("Cases", "Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
frameWidget(m)
# m <- leaflet(world_spdf) %>%
#   addTiles() %>%
#   setView(lat=10, lng=0, zoom=2) %>%
#   addPolygons(fillOpacity = 0.8,
#               color = ~colorQuantile("YlOrRd", tot_cases_per_million, n = 9)(tot_cases_per_million),
#               stroke = FALSE,
#               label = text_popup,
#               labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
#                                           textsize = "13px",
#                                           direction = "auto"))
#
# frameWidget(m)
world_spdf@data %>% View()
world_spdf@data <- covid %>%
filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
right_join(select(world_spdf@data, -LON, -LAT), by = c("geoId" = "ISO2"))
if(!file.exists("data/world_shape_file.zip")){
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="data/world_shape_file.zip")
dir.create("data/world_shape_file/")
unzip("data/world_shape_file.zip", exdir = "data/world_shape_file")
}
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data <- covid %>%
filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
right_join(select(world_spdf@data, -LON, -LAT), by = c("geoId" = "ISO2"))
#right_join(world_spdf@data, by = c("iso3c" = "ISO3"))
text_popup <- paste("Country: ", world_spdf@data$NAME, "<br/>",
"Conf. cases: ", world_spdf@data$tot_cases, "<br/>",
"Conf. deaths: ", world_spdf@data$tot_deaths, "<br/>",
"Conf. cases p.million: ", round(world_spdf@data$tot_cases_per_million, 2), "<br/>",
"Conf. deaths p.million: ", round(world_spdf@data$tot_deaths_per_million, 2), "<br/>",
sep="") %>%
lapply(htmltools::HTML)
colMap_1 <- colorNumeric("GnBu", domain = NULL)
colMap_2 <- colorNumeric("YlOrRd", domain = NULL)
m <- leaflet(world_spdf) %>%
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_1(tot_cases_per_million %>% log()),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Cases") %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_2(world_spdf$tot_deaths_per_million %>% log() %>% map_dbl(~ifelse(is.finite(.x),.x,NA))),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Deaths") %>%
# Layers control
addLayersControl(
baseGroups = c("Cases", "Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
frameWidget(m)
# m <- leaflet(world_spdf) %>%
#   addTiles() %>%
#   setView(lat=10, lng=0, zoom=2) %>%
#   addPolygons(fillOpacity = 0.8,
#               color = ~colorQuantile("YlOrRd", tot_cases_per_million, n = 9)(tot_cases_per_million),
#               stroke = FALSE,
#               label = text_popup,
#               labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
#                                           textsize = "13px",
#                                           direction = "auto"))
#
# frameWidget(m)
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data
covid$lat %>% range()
covid$lat %>% range(na.rm = TRUE)
covid$long %>% range(na.rm = TRUE)
View(world_spdf@data)
world_spdf@data <- covid %>%
filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
right_join(select(world_spdf@data, -LON, -LAT), by = c("geoId" = "ISO2"))
View(world_spdf@data)
if(!file.exists("data/world_shape_file.zip")){
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="data/world_shape_file.zip")
dir.create("data/world_shape_file/")
unzip("data/world_shape_file.zip", exdir = "data/world_shape_file")
}
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
world_spdf@data <- covid %>%
filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
right_join(select(world_spdf@data, ISO2), by = c("geoId" = "ISO2"))
#right_join(world_spdf@data, by = c("iso3c" = "ISO3"))
text_popup <- paste("Country: ", world_spdf@data$NAME, "<br/>",
"Conf. cases: ", world_spdf@data$tot_cases, "<br/>",
"Conf. deaths: ", world_spdf@data$tot_deaths, "<br/>",
"Conf. cases p.million: ", round(world_spdf@data$tot_cases_per_million, 2), "<br/>",
"Conf. deaths p.million: ", round(world_spdf@data$tot_deaths_per_million, 2), "<br/>",
sep="") %>%
lapply(htmltools::HTML)
colMap_1 <- colorNumeric("GnBu", domain = NULL)
colMap_2 <- colorNumeric("YlOrRd", domain = NULL)
m <- leaflet(world_spdf) %>%
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_1(tot_cases_per_million %>% log()),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Cases") %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_2(world_spdf$tot_deaths_per_million %>% log() %>% map_dbl(~ifelse(is.finite(.x),.x,NA))),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Deaths") %>%
# Layers control
addLayersControl(
baseGroups = c("Cases", "Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
frameWidget(m)
# m <- leaflet(world_spdf) %>%
#   addTiles() %>%
#   setView(lat=10, lng=0, zoom=2) %>%
#   addPolygons(fillOpacity = 0.8,
#               color = ~colorQuantile("YlOrRd", tot_cases_per_million, n = 9)(tot_cases_per_million),
#               stroke = FALSE,
#               label = text_popup,
#               labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
#                                           textsize = "13px",
#                                           direction = "auto"))
#
# frameWidget(m)
if(!file.exists("data/world_shape_file.zip")){
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="data/world_shape_file.zip")
dir.create("data/world_shape_file/")
unzip("data/world_shape_file.zip", exdir = "data/world_shape_file")
}
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
#world_spdf@data <- covid %>%
#  filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
world_spdf@data <- world_spdf@data %>%
left_join(filter(covid, date == max(date), region != "Cases_on_an_international_conveyance_Japan"),
by = c("ISO2" = "geoId"))
text_popup <- paste("Country: ", world_spdf@data$NAME, "<br/>",
"Conf. cases: ", world_spdf@data$tot_cases, "<br/>",
"Conf. deaths: ", world_spdf@data$tot_deaths, "<br/>",
"Conf. cases p.million: ", round(world_spdf@data$tot_cases_per_million, 2), "<br/>",
"Conf. deaths p.million: ", round(world_spdf@data$tot_deaths_per_million, 2), "<br/>",
sep="") %>%
lapply(htmltools::HTML)
colMap_1 <- colorNumeric("GnBu", domain = NULL)
colMap_2 <- colorNumeric("YlOrRd", domain = NULL)
m <- leaflet(world_spdf) %>%
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_1(tot_cases_per_million %>% log()),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Cases") %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_2(world_spdf$tot_deaths_per_million %>% log() %>% map_dbl(~ifelse(is.finite(.x),.x,NA))),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Deaths") %>%
# Layers control
addLayersControl(
baseGroups = c("Cases", "Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
frameWidget(m)
# m <- leaflet(world_spdf) %>%
#   addTiles() %>%
#   setView(lat=10, lng=0, zoom=2) %>%
#   addPolygons(fillOpacity = 0.8,
#               color = ~colorQuantile("YlOrRd", tot_cases_per_million, n = 9)(tot_cases_per_million),
#               stroke = FALSE,
#               label = text_popup,
#               labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
#                                           textsize = "13px",
#                                           direction = "auto"))
#
# frameWidget(m)
if(!file.exists("data/world_shape_file.zip")){
download.file("http://thematicmapping.org/downloads/TM_WORLD_BORDERS_SIMPL-0.3.zip" , destfile="data/world_shape_file.zip")
dir.create("data/world_shape_file/")
unzip("data/world_shape_file.zip", exdir = "data/world_shape_file")
}
world_spdf <- readOGR(
dsn= paste0(getwd(),"/data/world_shape_file") ,
layer="TM_WORLD_BORDERS_SIMPL-0.3",
verbose=FALSE
)
#world_spdf@data <- covid %>%
#  filter(date == max(date), region != "Cases_on_an_international_conveyance_Japan") %>%
#right_join(world_spdf@data, by = c("geoId" = "ISO2"))
world_spdf@data <- world_spdf@data %>%
left_join(filter(covid, date == max(date), region != "Cases_on_an_international_conveyance_Japan"),
by = c("ISO3" = "iso3c"))
text_popup <- paste("Country: ", world_spdf@data$NAME, "<br/>",
"Conf. cases: ", world_spdf@data$tot_cases, "<br/>",
"Conf. deaths: ", world_spdf@data$tot_deaths, "<br/>",
"Conf. cases p.million: ", round(world_spdf@data$tot_cases_per_million, 2), "<br/>",
"Conf. deaths p.million: ", round(world_spdf@data$tot_deaths_per_million, 2), "<br/>",
sep="") %>%
lapply(htmltools::HTML)
colMap_1 <- colorNumeric("GnBu", domain = NULL)
colMap_2 <- colorNumeric("YlOrRd", domain = NULL)
m <- leaflet(world_spdf) %>%
addTiles() %>%
setView(lat=10, lng=0, zoom=2) %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_1(tot_cases_per_million %>% log()),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Cases") %>%
addPolygons(fillOpacity = 0.8,
color = ~colMap_2(world_spdf$tot_deaths_per_million %>% log() %>% map_dbl(~ifelse(is.finite(.x),.x,NA))),
stroke = FALSE,
label = text_popup,
labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
textsize = "13px",
direction = "auto"),
group = "Deaths") %>%
# Layers control
addLayersControl(
baseGroups = c("Cases", "Deaths"),
options = layersControlOptions(collapsed = FALSE)
)
frameWidget(m)
# m <- leaflet(world_spdf) %>%
#   addTiles() %>%
#   setView(lat=10, lng=0, zoom=2) %>%
#   addPolygons(fillOpacity = 0.8,
#               color = ~colorQuantile("YlOrRd", tot_cases_per_million, n = 9)(tot_cases_per_million),
#               stroke = FALSE,
#               label = text_popup,
#               labelOptions = labelOptions(style = list("font-weight" = "normal", padding = "3px 8px"),
#                                           textsize = "13px",
#                                           direction = "auto"))
#
# frameWidget(m)
blogdown::serve_site()
blogdown::stop_server()
