library(magrittr)
library(ISOcodes)
library(readxl)
library(httr)
library(wbstats)
library(maps)
library(plotly)
library(viridis)
library(gifski)
library(png)
library(rgdal)
library(leaflet)
library(widgetframe)
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
include_graphics("anim.gif")
knitr::include_graphics("anim.gif")
getwd()
"C:/Users/stuar/OneDrive/GitProjects/Website/Website_using_blogdown/content/post/2020-03-28-covid-19-visualised/data/ecdc.xlsx"
"C:/Users/stuar/OneDrive/GitProjects/Website/Website_using_blogdown/content/post/2020-03-28-covid-19-visualised/data/ecdc.xlsx" %>% read_csv()
normalizePath()
?normalizePath()
list.files('content', '.Rmd$', full.names = TRUE, recursive = TRUE)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
knitr::opts_knit$set(
base.url = baseurl, base.dir = normalizePath('source')
)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
knitr::opts_knit$set(
base.url = baseurl, base.dir = normalizePath('source')
)
blogdown:::get_config2()
blogdown:::get_config()
blogdown:::get_config2('root', "/")
blogdown:::bin_paths()
blogdown:::site_base_dir()
blogdown:::site_root()
blogdown:::build_rmds()
blogdown:::rmd_pattern
blogdown:::check_config()
blogdown:::encode_paths()
blogdown::serve_site()
blogdown::serve_site()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
library(tidyverse)
library(lubridate)
library(RcppRoll)
library(purrr)
library(scales)
library(magrittr)
library(ISOcodes)
library(readxl)
library(httr)
library(wbstats)
library(maps)
library(plotly)
library(viridis)
library(gifski)
library(png)
library(rgdal)
library(leaflet)
library(widgetframe)
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
path <- normalizePath(path)
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
print(getwd())
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
path <- normalizePath(path)
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
library(tidyverse)
library(lubridate)
library(RcppRoll)
library(purrr)
library(scales)
library(magrittr)
library(ISOcodes)
library(readxl)
library(httr)
library(wbstats)
library(maps)
library(plotly)
library(viridis)
library(gifski)
library(png)
library(rgdal)
library(leaflet)
library(widgetframe)
print(getwd())
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
path <- normalizePath(path)
print(path)
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
print(getwd())
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
path <- normalizePath(path = path, winslash = "/")
print(path)
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
covid <- get_data(data_path)
knitr::include_graphics("anim.gif")
frameWidget(m)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
library(tidyverse)
library(lubridate)
library(RcppRoll)
library(purrr)
library(scales)
library(magrittr)
library(ISOcodes)
library(readxl)
library(httr)
library(wbstats)
library(maps)
library(plotly)
library(viridis)
library(gifski)
library(png)
library(rgdal)
library(leaflet)
library(widgetframe)
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
library(tidyverse)
library(lubridate)
library(RcppRoll)
library(purrr)
library(scales)
library(magrittr)
library(ISOcodes)
library(readxl)
library(httr)
library(wbstats)
library(maps)
library(plotly)
library(viridis)
library(gifski)
library(png)
library(rgdal)
library(leaflet)
library(widgetframe)
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
library(tidyverse)
library(lubridate)
library(RcppRoll)
library(purrr)
library(scales)
library(magrittr)
library(ISOcodes)
library(readxl)
library(httr)
library(wbstats)
library(maps)
library(plotly)
library(viridis)
library(gifski)
library(png)
library(rgdal)
library(leaflet)
library(widgetframe)
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
library(tidyverse)
library(lubridate)
library(RcppRoll)
library(purrr)
library(scales)
library(magrittr)
library(ISOcodes)
library(readxl)
library(httr)
library(wbstats)
library(maps)
library(plotly)
library(viridis)
library(gifski)
library(png)
library(rgdal)
library(leaflet)
library(widgetframe)
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
blogdown::serve_site()
blogdown::serve_site()
blogdown::serve_site()
setwd("C:/Users/stuar/OneDrive/GitProjects/Website/Website_using_blogdown")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, out.width = "100%", fig.align = "centre")
library(tidyverse)
library(lubridate)
library(RcppRoll)
library(purrr)
library(scales)
library(magrittr)
library(ISOcodes)
library(readxl)
library(httr)
library(wbstats)
library(maps)
library(plotly)
library(viridis)
library(gifski)
library(png)
library(rgdal)
library(leaflet)
library(widgetframe)
data_path <- "data/ecdc.xlsx"
if(!file.exists(data_path)) file.create(data_path)
get_data <- function(path){
download <- function(datetime){
url <- paste("https://www.ecdc.europa.eu/sites/default/files/documents/COVID-19-geographic-distribution-worldwide-", format(datetime, "%Y-%m-%d"), ".xlsx", sep = "")
GET(url, authenticate(":", ":", type="ntlm"), write_disk(path, overwrite = TRUE))
return(read_xlsx(path))
}
tryCatch(
download(Sys.time()),
error = function(e) download(Sys.time() - days(1))
) %>% return()
}
covid <- get_data(data_path) %>%
select(-c(day, month, year)) %>%
mutate_at(vars("dateRep"), as_date) %>%
mutate_at(vars("cases", "deaths"), as.integer) %>%
mutate_at(vars("countriesAndTerritories", "geoId"), as_factor) %>%
rename(date = dateRep, new_cases = cases, new_deaths = deaths, region = `countriesAndTerritories`) %>%
complete(date, nesting(region, geoId)) %>%
group_by(region) %>%
arrange(date) %>%
mutate(tot_cases = as.integer(cumsum(replace_na(new_cases, 0))),
tot_deaths = as.integer(cumsum(replace_na(new_deaths, 0))),
past_3day_cases = as.integer(roll_sumr(new_cases, n = 3L, na.rm = TRUE))) %>%
ungroup() %>%
select(date, region, geoId, everything()) %>%
arrange(region, desc(date)) %>%
mutate_at(vars("geoId"), ~recode(.,
"UK" = "GB",
"EL" = "GR",
"PYF" = "PF"))
blogdown::serve_site()
